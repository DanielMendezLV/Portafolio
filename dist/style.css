html {
  box-sizing: border-box;
  font-size: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  font-family: "Space Grotesk", sans-serif;
  background-color: var(--bg-body);
  font-size: 1.125rem;
  line-height: 1.56;
}

.wrapper {
  width: calc(100% - 2rem);
  max-width: 69.375rem;
  margin: 0 auto;
}
@media (min-width: 43.75rem) {
  .wrapper {
    width: calc(100% - 3.75rem);
  }
}

a {
  transition: color 250ms ease-in-out;
}

a:hover {
  color: var(--accent);
}

.visually-hidden {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

:root {
  --bg-body: hsl(0, 0%, 8%);
  --bg-contact: hsl(0, 0%, 14%);
  --accent: hsl(153, 71%, 59%);
  --text2: hsl(0, 0%, 85%);
  --text: hsl(0, 0%, 100%);
  --invalid: hsl(7, 100%, 68%);
}

.header {
  margin-top: 20px;
}
.header__nav {
  display: flex;
  flex-wrap: wrap;
  text-align: center;
  justify-content: center;
  gap: 20px 25px;
}
@media (min-width: 43.75rem) {
  .header__nav {
    justify-content: flex-start;
    text-align: left;
    align-items: center;
    gap: 32px;
  }
}
.header__home {
  font-size: 1.5rem;
  font-size: clamp(1.5rem, 1.02rem + 2.04vw, 2rem);
  line-height: 1;
  color: var(--text);
  text-decoration: none;
  flex: 1 0 100%;
}
@media (min-width: 43.75rem) {
  .header__home {
    flex: 1%;
    /* : Specifies the initial size of the flex item before any remaining space is distributed. In this case, it is set to 1%, indicating that the item should have a width or height (depending on the flex container's direction) of 1% of the container's size.
    */ /* Un valor, width/height: flex-basis */
    margin-right: auto;
  }
}
.header__social {
  display: block;
}
.header__social > svg {
  display: block;
}
.header__social > svg > path {
  transition: fill 250ms ease-in-out;
}
.header__social:hover > svg > path {
  fill: var(--accent);
}/*# sourceMappingURL=style.css.map */